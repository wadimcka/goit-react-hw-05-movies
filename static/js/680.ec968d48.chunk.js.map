{"version":3,"file":"static/js/680.ec968d48.chunk.js","mappings":"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","sources":["api/api.js","components/MovisList/MovisList.styled.js","components/MovisList/MovisList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'fb5a8efc74b4cfbb21e23283cbfdefb3',\n  language: 'en-US',\n};\n\nexport const fetchHomeMovList = async () => {\n  const response = await axios.get('trending/all/day');\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n\nexport const fetchMovieDetail = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n\nexport const fetchSearchMovies = async movieQuery => {\n  const response = await axios.get(`search/movie?query=${movieQuery}`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Movie = styled.li`\n  width: 200px;\n  border: 1px solid black;\n  border-radius: 8px;\n  overflow: hidden;\n  padding: 4px;\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  text-align: center;\n  text-decoration: none;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Movie, MovieList, MovieName } from './MovisList.styled';\nconst defaultImg = 'https://fakeimg.pl/200x300';\n\nconst MovisList = ({ movieListData }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <MovieList>\n        {movieListData.map(({ id, poster_path, title }) => {\n          return (\n            <Movie key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n                      : defaultImg\n                  }\n                  alt={title}\n                />\n                <MovieName>{title}</MovieName>\n              </Link>\n            </Movie>\n          );\n        })}\n      </MovieList>\n    </div>\n  );\n};\n\nexport default MovisList;\n","import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport MovisList from 'components/MovisList/MovisList';\nimport { fetchHomeMovList } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieListData, setMovieListData] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    const fechData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const data = await fetchHomeMovList({ signal });\n        setMovieListData(data);\n        if (data.length === 0) {\n          toast.warn('No data found for your request');\n        }\n      } catch (error) {\n        setError(error.message);\n        toast.warn(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fechData();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <div>\n      {error !== null && error(error)}\n      {isLoading && <Loader />}\n      <MovisList movieListData={movieListData} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","api_key","language","fetchHomeMovList","async","response","data","status","Error","results","fetchMovieDetail","concat","movieId","fetchCast","cast","fetchReviews","fetchSearchMovies","movieQuery","MovieList","styled","_templateObject","_taggedTemplateLiteral","Movie","_templateObject2","MovieName","_templateObject3","_ref","movieListData","location","useLocation","_jsx","children","map","_ref2","id","poster_path","title","_jsxs","Link","to","state","from","src","alt","HomePage","error","setError","useState","isLoading","setIsLoading","setMovieListData","useEffect","abortController","AbortController","signal","length","toast","message","fechData","abort","Loader","MovisList"],"sourceRoot":""}