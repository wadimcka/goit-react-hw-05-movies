{"version":3,"file":"static/js/978.c3430454.chunk.js","mappings":"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","sources":["api/api.js","components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'fb5a8efc74b4cfbb21e23283cbfdefb3',\n  language: 'en-US',\n};\n\nexport const fetchHomeMovList = async () => {\n  const response = await axios.get('trending/all/day');\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n\nexport const fetchMovieDetail = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n\nexport const fetchSearchMovies = async movieQuery => {\n  const response = await axios.get(`search/movie?query=${movieQuery}`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledGoBackBtn = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 0;\n  color: black;\n  border: 1px solid black;\n  border-radius: 8px;\n  text-decoration: none;\n  /* font-weight: 500; */\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  margin-top: 10px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport { StyledGoBackBtn } from './GoBackBtn.styled';\n\nconst GoBackBtn = ({ to }) => {\n  return (\n    <div>\n      <StyledGoBackBtn to={to}>Go Back</StyledGoBackBtn>\n    </div>\n  );\n};\n\nexport default GoBackBtn;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 10px;\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useParams,\n  useSearchParams,\n} from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovieDetail } from 'api/api';\nimport GoBackBtn from 'components/GoBackBtn/GoBackBtn';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container } from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const goBackUrl = useRef(location.state?.from ?? '/movies');\n\n  const defaultImg = 'https://fakeimg.pl/200x300';\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (!movieId) return;\n    const getMovie = async () => {\n      setError(null);\n      setIsLoading(true);\n      try {\n        const movieData = await fetchMovieDetail(movieId, { signal });\n        setMovieData(movieData);\n        if (movieData.length === 0) {\n          toast.warn('No data found for your request');\n        }\n      } catch (error) {\n        setError(error.message);\n        toast.warn(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  useEffect(() => {\n    const initialSearchParams = searchParams.get('searchQuery');\n    if (initialSearchParams) {\n      setSearchParams({ searchQuery: initialSearchParams });\n    }\n  }, [searchParams, setSearchParams]);\n\n  const { original_title, poster_path, vote_average, overview, genres } =\n    movieData;\n\n  return (\n    <Container>\n      {error !== null && toast.error(error)}\n      {isLoading && <Loader />}\n      <GoBackBtn to={goBackUrl.current} />\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n            : defaultImg\n        }\n        width={250}\n        alt=\"poster\"\n      />\n      <h1>{original_title}</h1>\n      <span>User Score: {vote_average ? vote_average.toFixed(1) : 'N/A'}%</span>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h2>Ganres</h2>\n      <ul>\n        {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n      </ul>\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","api_key","language","fetchHomeMovList","async","response","data","status","Error","results","fetchMovieDetail","concat","movieId","fetchCast","cast","fetchReviews","fetchSearchMovies","movieQuery","StyledGoBackBtn","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","to","_jsx","children","Container","MovieDetailsPage","_location$state$from","_location$state","movieData","setMovieData","useState","isLoading","setIsLoading","error","setError","useParams","searchParams","setSearchParams","useSearchParams","location","useLocation","goBackUrl","useRef","state","from","useEffect","abortController","AbortController","signal","length","toast","message","getMovie","abort","initialSearchParams","get","searchQuery","original_title","poster_path","vote_average","overview","genres","_jsxs","Loader","GoBackBtn","current","src","width","alt","toFixed","map","id","name","Outlet"],"sourceRoot":""}