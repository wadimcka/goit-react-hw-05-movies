{"version":3,"file":"static/js/67.2274cd3b.chunk.js","mappings":"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","sources":["api/api.js","components/MovisList/MovisList.styled.js","components/MovisList/MovisList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'fb5a8efc74b4cfbb21e23283cbfdefb3',\n  language: 'en-US',\n};\n\nexport const fetchHomeMovList = async () => {\n  const response = await axios.get('trending/all/day');\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n\nexport const fetchMovieDetail = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n\nexport const fetchSearchMovies = async movieQuery => {\n  const response = await axios.get(`search/movie?query=${movieQuery}`);\n  const { data } = response;\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error('Data failed to load. Status: ' + response.status);\n  }\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Movie = styled.li`\n  width: 200px;\n  border: 1px solid black;\n  border-radius: 8px;\n  overflow: hidden;\n  padding: 4px;\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  text-align: center;\n  text-decoration: none;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Movie, MovieList, MovieName } from './MovisList.styled';\nconst defaultImg = 'https://fakeimg.pl/200x300';\n\nconst MovisList = ({ movieListData }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <MovieList>\n        {movieListData.map(({ id, poster_path, title }) => {\n          return (\n            <Movie key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n                      : defaultImg\n                  }\n                  alt={title}\n                />\n                <MovieName>{title}</MovieName>\n              </Link>\n            </Movie>\n          );\n        })}\n      </MovieList>\n    </div>\n  );\n};\n\nexport default MovisList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 30px;\n`;\n\nexport const SearchBtn = styled.button`\n  background-color: tomato;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 20px;\n  margin-left: 10px;\n  cursor: pointer;\n  font-size: 16px;\n\n  &.active {\n    color: white;\n    background-color: navy;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  border: 1px solid black;\n  border-radius: 4px;\n  max-width: 600px;\n`;\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Container, SearchBtn } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [, setSearchParams] = useSearchParams();\n\n  const handlInputChange = event => {\n    const query = event.target.value;\n    if (!query || query === '') {\n      setSearchParams({});\n      setSearchQuery('');\n      return;\n    }\n    setSearchParams({ searchQuery: query });\n    setSearchQuery(event.target.value.trim());\n  };\n\n  const handlerFormSubmit = event => {\n    event.preventDefault();\n    if (!searchQuery) {\n      toast.warn('Nothing was found for your request! Try again.');\n      return;\n    }\n    setSearchQuery('');\n    onSubmit(searchQuery);\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handlerFormSubmit}>\n        <input\n          name=\"query\"\n          value={searchQuery}\n          type=\"text\"\n          onChange={handlInputChange}\n        />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </form>\n    </Container>\n  );\n};\n\nexport default SearchForm;\n","import { fetchSearchMovies } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovisList from 'components/MovisList/MovisList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst MoviesPage = () => {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieQuery, setmovieQuery] = useState('');\n  const [searchMoviesData, setSearchMoviesData] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  const handleSearchSubmit = inputValue => {\n    setmovieQuery(inputValue);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (!movieQuery) {\n      return;\n    }\n    const getSearchMovies = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const data = await fetchSearchMovies(movieQuery, { signal });\n\n        if (data.length === 0) {\n          toast.warn('No data found for your request');\n        }\n        setSearchMoviesData(data);\n      } catch (error) {\n        if (error.name === 'AbortError') {\n          console.log('Request was aborted');\n        } else {\n          setError(error.message);\n          toast.warn(error);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getSearchMovies();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieQuery]);\n\n  useEffect(() => {\n    const urlParam = searchParams.get('searchQuery');\n\n    if (urlParam && !movieQuery) {\n      setmovieQuery(urlParam);\n    }\n  }, [searchParams, movieQuery]);\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSearchSubmit} />\n      {error !== null && toast.error(error)}\n      {isLoading && <Loader />}\n      <MovisList movieListData={searchMoviesData} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","api_key","language","fetchHomeMovList","async","response","data","status","Error","results","fetchMovieDetail","concat","movieId","fetchCast","cast","fetchReviews","fetchSearchMovies","movieQuery","MovieList","styled","_templateObject","_taggedTemplateLiteral","Movie","_templateObject2","MovieName","_templateObject3","_ref","movieListData","location","useLocation","_jsx","children","map","_ref2","id","poster_path","title","_jsxs","Link","to","state","from","src","alt","Container","SearchBtn","onSubmit","searchQuery","setSearchQuery","useState","setSearchParams","useSearchParams","event","preventDefault","toast","name","value","type","onChange","query","target","trim","MoviesPage","error","setError","isLoading","setIsLoading","setmovieQuery","searchMoviesData","setSearchMoviesData","searchParams","useEffect","abortController","AbortController","signal","length","console","log","message","getSearchMovies","abort","urlParam","get","SearchForm","inputValue","Loader","MovisList"],"sourceRoot":""}